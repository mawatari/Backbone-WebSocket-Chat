/*! my_project 2013-08-19 */
var MyApp={Models:{},Collections:{},Views:{},Templates:{},Mediator:{},App:{}};this.MyApp=this.MyApp||{},this.MyApp.Templates=this.MyApp.Templates||{},this.MyApp.Templates.editor=Handlebars.template(function(a,b,c,d,e){function f(){return'\n<div id="chat-area" class="alert alert-error">\n	<button type="button" class="close" data-dismiss="alert">×</button>\n	<i class="icon-warning-sign"></i>サーバに接続できませんでした。\n</div>\n'}function g(a,b){var d,e="";return e+='\n<div id="chat-area">\n	<div class="input-prepend">\n		<span class="add-on" id="user-name"><i class="icon-user"></i>',(d=c.name)?d=d.call(a,{hash:{},data:b}):(d=a.name,d=typeof d===j?d.apply(a):d),e+=k(d)+'</span>\n		<input type="text" id="new-message" placeholder="今なにしてる？">\n	</div>\n</div>\n'}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,a.helpers),e=e||{};var h,i="",j="function",k=this.escapeExpression,l=this;return i+="<h1>WebSocket Chat</h1>\n",h=c["if"].call(b,b.error,{hash:{},inverse:l.program(3,g,e),fn:l.program(1,f,e),data:e}),(h||0===h)&&(i+=h),i+="\n"}),this.MyApp.Templates.header=Handlebars.template(function(a,b,c,d,e){return this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,a.helpers),e=e||{},'<div class="navbar navbar-fixed-top navbar-inverse">\n	<div class="navbar-inner">\n		<div class="container">\n			<a class="brand" href="#">WebSocket Chat</a>\n			<ul class="nav">\n				<li><a href="#">Home</a></li>\n				<li><a href="#">About</a></li>\n				<li><a href="#">Contact</a>\n				</li>\n			</ul>\n		</div>\n	</div>\n</div>\n'}),this.MyApp.Templates.layout=Handlebars.template(function(a,b,c,d,e){return this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,a.helpers),e=e||{},'<header id="header"></header>\n<div id="container" class="container">\n    <div id="editor"></div>\n	<ul id="message-list" class="unstyled row-fluid"></ul>\n</div>\n'}),this.MyApp.Templates.message_list=Handlebars.template(function(a,b,c,d,e){function f(a,b){var d,e="";return e+='\n	<li class="well well-small">\n		<div><i class="icon-user"></i>',(d=c.user)?d=d.call(a,{hash:{},data:b}):(d=a.user,d=typeof d===k?d.apply(a):d),e+=l(d)+'\n			<small class="meta chat-time">',(d=c.time)?d=d.call(a,{hash:{},data:b}):(d=a.time,d=typeof d===k?d.apply(a):d),e+=l(d)+"</small>\n		</div>\n		<div>",(d=c.body)?d=d.call(a,{hash:{},data:b}):(d=a.body,d=typeof d===k?d.apply(a):d),e+=l(d)+"</div>\n	</li>\n"}function g(a,b){var d,e="";return e+='\n	<li class="alert',d=c["if"].call(a,a.connect,{hash:{},inverse:m.noop,fn:m.program(4,h,b),data:b}),(d||0===d)&&(e+=d),e+='" id="',(d=c.id)?d=d.call(a,{hash:{},data:b}):(d=a.id,d=typeof d===k?d.apply(a):d),e+=l(d)+'">\n		<button type="button" class="close" data-dismiss="alert">×</button>\n		<div>\n			<i class="icon-user"></i>',(d=c.body)?d=d.call(a,{hash:{},data:b}):(d=a.body,d=typeof d===k?d.apply(a):d),e+=l(d)+'\n			<small class="meta chat-time">',(d=c.time)?d=d.call(a,{hash:{},data:b}):(d=a.time,d=typeof d===k?d.apply(a):d),e+=l(d)+"</small>\n		</div>\n	</li>\n"}function h(){return" alert-info"}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,a.helpers),e=e||{};var i,j="",k="function",l=this.escapeExpression,m=this;return i=c["if"].call(b,b.comment,{hash:{},inverse:m.program(3,g,e),fn:m.program(1,f,e),data:e}),(i||0===i)&&(j+=i),j+="\n"}),MyApp.Models.Message=Backbone.Model.extend({defaults:{body:"no message",user:"anonymous",time:"",comment:null,connection:null,disconnection:null}}),MyApp.Models.User=Backbone.Model.extend({defaults:{name:"ゲスト"+Math.floor(100*Math.random())}}),MyApp.Collections.MessageList=Backbone.Collection.extend({model:MyApp.Models.Message}),MyApp.Views.Editor=Backbone.View.extend({template:MyApp.Templates.editor,initialize:function(){_.bindAll(this,"connectionError"),this.user=this.options.user,this.render(this.user.toJSON()),this.input=this.$("#new-message"),this.input.focus(),MyApp.Mediator.on("connectionError",this.connectionError)},events:{"keypress #new-message":"createOnEnter"},createOnEnter:function(a){if(13==a.keyCode&&this.input.val()){var b=this.input.val();MyApp.Mediator.trigger("newMessage",b),this.input.val("")}},connectionError:function(){this.render({error:1})},render:function(a){this.$el.html(this.template(a))}}),MyApp.Views.Header=Backbone.View.extend({template:MyApp.Templates.header,initialize:function(){this.$el.html(this.template())}}),MyApp.Views.MessageList=Backbone.View.extend({template:MyApp.Templates.message_list,initialize:function(){this.messages=this.options.messages,this.listenTo(this.messages,"add",this.addOne)},addOne:function(a){this.$el.prepend($(this.template(a.toJSON())).hide().fadeIn(500))},addAll:function(){this.messages.each(this.addOne,this)}}),MyApp.Views.WebSocket=Backbone.View.extend({initialize:function(){_.bindAll.apply(_,[this].concat(_.functions(this))),this.messages=this.options.messages,this.user=this.options.user.attributes.name,this.ws=this.options.ws,MyApp.Mediator.on("newMessage",this.addMessage),this.ws.onmessage=this.onmessage,this.ws.onopen=this.onopen,this.ws.onerror=this.onerror,window.onbeforeunload=this.onbeforeunload},addMessage:function(a){this.ws.send(JSON.stringify({comment:1,body:a,user:this.user}))},onmessage:function(a){var b=JSON.parse(a.data);this.messages.add(b)},onopen:function(){this.ws.send(JSON.stringify({connect:1,body:this.user+"が入室しました",user:this.user}))},onerror:function(){MyApp.Mediator.trigger("connectionError")},onbeforeunload:function(){this.ws.send(JSON.stringify({disconnect:1,body:this.user+"が退室しました",user:this.user}))}}),MyApp.App=Backbone.View.extend({el:"#app",template:MyApp.Templates.layout,initialize:function(){_.extend(MyApp.Mediator,Backbone.Events),this.user=new MyApp.Models.User,this.messages=new MyApp.Collections.MessageList,this.$el.html(this.template()),this.header=new MyApp.Views.Header({el:this.$el.find("#header")}),this.editor=new MyApp.Views.Editor({el:this.$el.find("#editor"),user:this.user}),this.message_list=new MyApp.Views.MessageList({el:this.$el.find("#message-list"),messages:this.messages}),this.websocket=new MyApp.Views.WebSocket({messages:this.messages,user:this.user,ws:new WebSocket("ws://localhost:8888/")})}}),new MyApp.App;